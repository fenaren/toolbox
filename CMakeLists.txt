project(toolbox)
cmake_minimum_required(VERSION 3.5)

# Flags used for all builds
set(COMMON_FLAGS "-Wall")

# Flags used for all builds on specific platforms
set(COMMON_LINUX_FLAGS "-DLINUX")
set(COMMON_WINDOWS_FLAGS "-DWINDOWS")

# Generate the LINUX variable
set(LINUX 0)
if(${UNIX} AND NOT ${APPLE})
  set(LINUX 1)
endif(${UNIX} AND NOT ${APPLE})

if(${LINUX})
  set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} ${COMMON_LINUX_FLAGS}")
  set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${COMMON_LINUX_FLAGS}")
elseif(${WIN32})
  set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} ${COMMON_WINDOWS_FLAGS}")
  set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${COMMON_WINDOWS_FLAGS}")
endif(${LINUX})

set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} ${COMMON_FLAGS} -DDEBUG")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${COMMON_FLAGS} -DRELEASE")

add_library(toolbox STATIC
  ${CMAKE_CURRENT_LIST_DIR}/Endian.cpp
  ${CMAKE_CURRENT_LIST_DIR}/Log.cpp
  ${CMAKE_CURRENT_LIST_DIR}/OnlineStatistics.cpp)

include(${CMAKE_CURRENT_LIST_DIR}/networking/CMakeLists.txt)
